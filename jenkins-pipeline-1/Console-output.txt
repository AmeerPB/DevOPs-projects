Started by user admin
Obtained JenkinsPipeline from git https://github.com/AmeerPB/jenkins-pipeline-1
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/pipeline-test-1
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/pipeline-test-1/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/AmeerPB/jenkins-pipeline-1 # timeout=10
Fetching upstream changes from https://github.com/AmeerPB/jenkins-pipeline-1
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
 > git fetch --tags --force --progress -- https://github.com/AmeerPB/jenkins-pipeline-1 +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision 888660ed1780fb8f1dd7f05387088a2c5c61e09b (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 888660ed1780fb8f1dd7f05387088a2c5c61e09b # timeout=10
Commit message: "updated JenkinsPipeline"
 > git rev-list --no-walk 888660ed1780fb8f1dd7f05387088a2c5c61e09b # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone Repository on Docker Server)
[Pipeline] withCredentials
Masking supported pattern matches of $DOCKERHUB_USERNAME
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ ssh -o StrictHostKeyChecking=no ${DOCKER_SERVER_USERNAME}@13.59.191.178 
                        if [ -d "jenkins-pipeline-1" ]; then
                            rm -rf jenkins-pipeline-1
                        fi
                        git clone https://github.com/AmeerPB/jenkins-pipeline-1
                        
Cloning into 'jenkins-pipeline-1'...
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Docker Image)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ ssh -o StrictHostKeyChecking=no ${DOCKER_SERVER_USERNAME}@13.59.191.178 
                    cd jenkins-pipeline-1 &&
                    sudo docker build -t ${DOCKERHUB_USERNAME}/nginx-imageforjenkins .
                    
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 171B done
#1 DONE 0.0s

#2 [auth] library/nginx:pull token for registry-1.docker.io
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/nginx:1.27.0
#3 DONE 0.2s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [1/3] FROM docker.io/library/nginx:1.27.0@sha256:56b388b0d79c738f4cf51bbaf184a14fab19337f4819ceb2cae7d94100262de8
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 1.19kB done
#6 DONE 0.0s

#7 [2/3] COPY nginx.conf /etc/nginx/nginx.conf
#7 CACHED

#8 [3/3] COPY html /usr/share/nginx/html
#8 CACHED

#9 exporting to image
#9 exporting layers done
#9 writing image sha256:aaaae3a910a5fd47f4867db3d822f615c1c31bdf8362ea4b96e2959254b24484 done
#9 naming to docker.io/${DOCKERHUB_USERNAME}/nginx-imageforjenkins done
#9 DONE 0.0s
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push Docker Image to Docker Hub)
[Pipeline] withCredentials
Masking supported pattern matches of $DOCKERHUB_PASSWORD
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ ssh -o StrictHostKeyChecking=no ${DOCKER_SERVER_USERNAME}@13.59.191.178 
                        sudo docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
                        sudo docker push ${DOCKERHUB_USERNAME}/nginx-imageforjenkins
                        
flag needs an argument: 'p' in -p
See 'docker login --help'.
Using default tag: latest
The push refers to repository [docker.io/${DOCKERHUB_USERNAME}/nginx-imageforjenkins]
81a8bf6f0174: Preparing
220d36fb35e0: Preparing
10655d686986: Preparing
3dd5fd695861: Preparing
eddb6eb0845b: Preparing
8162731f1e8d: Preparing
cddaf363c4d4: Preparing
409a3bc90254: Preparing
1387079e86ad: Preparing
8162731f1e8d: Waiting
cddaf363c4d4: Waiting
409a3bc90254: Waiting
1387079e86ad: Waiting
10655d686986: Mounted from library/nginx
eddb6eb0845b: Mounted from library/nginx
3dd5fd695861: Mounted from library/nginx
8162731f1e8d: Mounted from library/nginx
cddaf363c4d4: Mounted from library/nginx
409a3bc90254: Mounted from library/nginx
1387079e86ad: Mounted from library/nginx
81a8bf6f0174: Pushed
220d36fb35e0: Pushed
latest: digest: sha256:74bea1afdc5e3acf230dc7856673884b4bf164f224c36556cbbf60f98c170239 size: 2192
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
Pipeline execution completed.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
